
Demetri 00:00:01
Okay, so we are going to build a new app that works as a call to a web app, either using Vercel and Supabase, or GitHub, Vercel, and Supabase will be the setup. Supabase will be the server, the SQL server. Vercel will be where we launch the public GitHub repository. This app, what we're going to do is for Jaina Jairo, the restaurant, essentially I have.
Demetri 00:00:34
all of these new forms and workflows and worksheets that I've given the staff to go along with their job descriptions and their roles, and essentially what we have are for the opening line cooks, they need to fill out a review. The first thing they do when they get into work, which is usually 9.30 a.m., but we can mess with timing, they will open it up. They will open an app on their phone that will... have a list of user-friendly, large, mobile-friendly, mobile-optimized buttons, let's say,
Demetri 00:01:06
in a single column that they can click opening line cook, closing line cook, line cook's transition. So there's three for the line cooks right there. So they have their opening flow, they have their evening flow, and then they have their transition flow. When they open those, it's going to take them through a whole workflow, and it will actually, yes, we'll come back to what they exactly do. For the rest of the buttons on the home screen, we also have opening prep cook.
Demetri 00:01:40
We have lead prep cook, which will be password protected because it's a managerial role. Then we have the kitchen manager, which is also password protected because it's managerial. And then we have the order manager or ordering manager. Again, password protected since that is... It's a managerial role. Um, the last one we'll have is General Manager, and again, password protected, and then we'll have Assistant Manager. So, those are all the buttons on the home screen.
Demetri 00:02:12
Each one takes you through to a different flow. Um, another thing is, when you get to that home screen, I need to have an option for, um, the users to sign in, so we need to create a username and password, but an easy one, not a crazy secure one, because this will all be running, like I said, within our Google Sites intranet. Um, it will call to the app itself, we'll embed it as a full screen, um, embed code from, uh, Vercel.
Demetri 00:02:43
Anyway, um, so, the first thing that happens is, uh, any of the staff at any given time will open the app, it will put in their username and their password, and then it'll take them to the home screen. And only... I only see available there what... applies to them. So we'll have to filter. We'll get a list of staff names and which options they are allowed to see. So for example, let's go over the line cook.
Demetri 00:03:13
workflow. The opening line cooks, oh sorry, let's go back. So after they put the username and password, then they are presented with a screen of these mobile optimized buttons of only the ones that apply to them. Something really important that we need to design from the start is personalized tasks, personalized jobs per se. Some of them are pre-filled because they're recurring every day or they're recurring on specific days of the week or monthly.
Demetri 00:03:45
whatnot, but in the back end where I can put all these in under the general manager flow, I will have the option to see the users and assign specific tasks to them. When that user signs in, the first thing they see is, the top is the button that's going to say today's tasks or something similar. They'll click on that and have a full list of everything they need to accomplish that day. When they go to accomplish something and they say they finished it, they'll click a check mark next to it, which will then.
Demetri 00:04:17
open up an individualized per task workflow that's going to say, okay, did you finish it complete? Did you finish it halfway? Any notes you need to make notes about it? And then the option to upload a picture. After they do all of that, it's all optional information except for maybe, is it 100% complete? We can make like four options that'll be like a required response, 25% complete, 50% complete, or 100% complete. And then optional notes and optional upload picture.
Demetri 00:04:49
Some of the tasks I'll be able to say I need a picture required. So in the general manager flow, I'll be able to do that. Another option is I'll be able to, to flag some of the tasks as being transferable. This means that depending on the task and who is actually able to complete it, the user can click on a task, and transfer it to another user within that same category. So it needs to be a compatible transfer, so to speak.
Demetri 00:05:22
So a line cook can only transfer a task to another line cook. And the task has to be approved by the other user. So they'll get an alert when they open the app, saying approve transfers or something like that. They'll see the transfer, they'll see who it came from, they'll see what time it transferred. And then they'll see any of the required information about the task that's needed. And then they can hit approve or reject,
Demetri 00:05:54
which will be important because not all of the transfers, make sense. applicable or realistic in the moment. So if a user accepts that suddenly that task lives in their workflow. But if they reject it, then it's sent back to the user. So they get an alert again, we need to set up some kind of push alert with this too. And that might be tricky since the app lives on a website. So think about that and what our options are for that maybe a text message. And basically everything needs to be free. I forgot to mention.
Demetri 00:06:30
every single solution we need to implement, we need to get creative and find a free option. So anyway, that's basically the gist of it. Each user will have tasks that the general manager inputs, assigns, can edit and change at any time. Some are required, some are not. They're in a list based on priority. But again, this is all something the general manager can change and the assistant manager can change.
Demetri 00:07:00
change, if the general manager allows that task to be edited by another user, aka or eg an assistant manager, a kitchen manager, an ordering manager, the lead prep cook, etc. Then that person will be able to go in and edit those tasks as well. It also, for the prep cook button, the flow on that will be they open it in the morning, they do an initial inventory, which will be required, so I'll set those items up under the general manager back end, and after they finish their required initial inventory of.
Demetri 00:07:36
the items I set up, they'll be allowed to access the rest of their workflow, which the next step will be assessing the prep needs for the day, and after assessing the prep needs, they're going to be able to type in, the tasks will already be in there for them, them, and then be able to drag and drop, reorder them in order of priority. This, what then we'll do, is update all of the other users flagged as a prep cook, their.
Demetri 00:08:10
personalized workflow, all of those things will show up there for them as well to either, take ownership of, or the lead prep cook can manually assign it to a specific user. So that's what they need to do for the day, and again, just like the other tasks, they'll click on it, go through a little flow, like how much did you complete, or did they not complete it at all, and then notes, optional notes, and then pictures, and I think I want.
Demetri 00:08:40
to be able to say whether or not any of those fields are required in the general manager backend. So let's start there, and you just give me step-by-step instructions of exactly what I need to do. If you're ever giving me code, and I need to update a code somewhere, I need the entire output of the code, no patches or updates. Is that okay? make it super error-free and user-friendly for me to set this entire thing up. Let's start building it out now.